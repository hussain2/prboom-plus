/* Emacs style mode select   -*- C++ -*-
 *-----------------------------------------------------------------------------
 *
 *
 *  PrBoom: a Doom port merged with LxDoom and LSDLDoom
 *  based on BOOM, a modified and improved DOOM engine
 *  Copyright (C) 1999-2000 by
 *  Florian Schulze (florian.schulze@gmx.net)
 *  Copyright 2005, 2006 by
 *  Florian Schulze, Colin Phipps, Neil Stevens, Andrey Budko
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 *  02111-1307, USA.
 *
 * DESCRIPTION:
 *
 *-----------------------------------------------------------------------------*/

#define inline __inline

/* Define if you have the ANSI C header files.  */
#define STDC_HEADERS 1

/* Define if your processor stores words with the most significant
   byte first (like Motorola and SPARC, unlike Intel and VAX).  */
/* #undef WORDS_BIGENDIAN */

/* Define to strcasecmp, if we have it */
#cmakedefine stricmp ${stricmp}

/* Define to strncasecmp, if we have it */
#cmakedefine strnicmp ${strnicmp}

/* Define on targets supporting 386 Assembly */
/* This is in the project settings */
/* #define I386_ASM 1 */

#ifdef _DEBUG
#define PRBOOM_DEBUG 1
#endif // _DEBUG

#cmakedefine RANGECHECK 1
#cmakedefine INSTRUMENTED 1
#cmakedefine CHECKHEAP 1
#cmakedefine HEAPDUMP 1
#cmakedefine ZONEIDCHECK 1

/* CPhipps - some debugging macros for the new wad lump handling code */
#cmakedefine SIMPLECHECKS 1
#cmakedefine TIMEDIAG 1

#define DOOMWADDIR "${DOOMWADDIR}"

/* On windows, snprintf has a different name */
#cmakedefine snprintf ${snprintf}

/* Define if you have the vsnprintf function.  */
#cmakedefine vsnprintf ${vsnprintf}

/* We define MIN to min if the platform has a fast implementation.  */
#cmakedefine MIN ${MIN}

/* We define MAX to max if the platform has a fast implementation.  */
#cmakedefine MAX ${MAX}

#cmakedefine DOGS 1

#cmakedefine USE_GLU_TESS 1
#cmakedefine USE_GLU_IMAGESCALE 1
#cmakedefine USE_GLU_MIPMAP 1
#cmakedefine USE_FBO_TECHNIQUE 1
#cmakedefine USE_SHADERS 1

#cmakedefine USE_WINDOWS_LAUNCHER 1

/* Define to the full name of this package. */
#define PACKAGE_NAME "${PROJECT_NAME}"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "${PACKAGE_NAME}"

/* Define to the version of this package. */
#define PACKAGE_VERSION "${PACKAGE_VERSION}"

/* Define if you want to use Joystick */
#cmakedefine HAVE_SDL_JOYSTICKGETAXIS 1

#cmakedefine USE_WIN32_PCSOUND_DRIVER 1

#cmakedefine USE_SDL2_MIXER 1
#cmakedefine USE_SDL2_IMAGE 1
#cmakedefine USE_SDL2_NET 1
#cmakedefine USE_PCRE_PCREPOSIX 1

#cmakedefine USE_LIBFLUIDSYNTH 1
#cmakedefine USE_LIBMAD 1
#cmakedefine USE_LIBPORTMIDI 1
#cmakedefine USE_VORBIS 1
#cmakedefine USE_DUMB 1


/* Shut up warnings */
#ifdef __INTEL_COMPILER
  #pragma warning(disable : 94 144 177 186 188 556 589 810)
#endif // __INTEL_COMPILER

#ifdef _WIN32

#ifdef _MSC_VER

//#define ALL_WARNINGS
#ifdef ALL_WARNINGS
  #pragma warning(error : 4701) // local variable *may* be used without init
  #pragma warning(error : 4189) // initialized but unused variable
#endif // ALL_WARNINGS

#endif // _MSC_VER

#endif // _WIN32
