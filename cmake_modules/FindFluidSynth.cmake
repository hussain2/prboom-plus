# - Find fluidsynth
# Find the native fluidsynth includes and library
#
#  FLUIDSYNTH_INCLUDE_DIRS - where to find fluidsynth.h
#  FLUIDSYNTH_LIBRARIES   - List of libraries when using fluidsynth.
#  FLUIDSYNTH_FOUND       - True if fluidsynth found.

#[[
IF (FLUIDSYNTH_INCLUDE_DIR AND FLUIDSYNTH_LIBRARIES)
  # Already in cache, be silent
  SET(FluidSynth_FIND_QUIETLY TRUE)
ENDIF ()
#]]
FIND_PATH(FLUIDSYNTH_INCLUDE_DIR fluidsynth.h)

FIND_LIBRARY(FLUIDSYNTH_LIBRARY NAMES fluidsynth )
MARK_AS_ADVANCED( FLUIDSYNTH_LIBRARY FLUIDSYNTH_INCLUDE_DIR )

# handle the QUIETLY and REQUIRED arguments and set FLUIDSYNTH_FOUND to TRUE if 
# all listed variables are TRUE
INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(FluidSynth DEFAULT_MSG FLUIDSYNTH_LIBRARY FLUIDSYNTH_INCLUDE_DIR)

IF(FLUIDSYNTH_FOUND)
	SET(FLUIDSYNTH_LIBRARIES ${FLUIDSYNTH_LIBRARY})
	SET(FLUIDSYNTH_INCLUDE_DIRS ${FLUIDSYNTH_INCLUDE_DIR})
ELSE(FLUIDSYNTH_FOUND)
	SET(FLUIDSYNTH_LIBRARIES)
	SET(FLUIDSYNTH_INCLUDE_DIRS)
ENDIF(FLUIDSYNTH_FOUND)

if(FLUIDSYNTH_FOUND AND NOT TARGET FLUIDSYNTH::FLUIDSYNTH)
    add_library(FLUIDSYNTH::FLUIDSYNTH INTERFACE IMPORTED)
	
	target_include_directories(FLUIDSYNTH::FLUIDSYNTH INTERFACE "${FLUIDSYNTH_INCLUDE_DIRS}")
	target_link_libraries(FLUIDSYNTH::FLUIDSYNTH INTERFACE "${FLUIDSYNTH_LIBRARIES}")

endif()
