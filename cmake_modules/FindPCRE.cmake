# FindMad.cmake
#
# Finds the Perl Compatible Regular Expressions libraries
#
# This will define the following variables
#
#    PCRE_FOUND
#
# and the following imported targets
#
#    PCRE::PCRE
#
# Author: Hussain AlMutawa - hussain.ali.almutawa@gmail.com

find_path(PCRE_INCLUDE_DIR pcre.h)

find_library(PCRE_DEBUG_LIBRARY pcred)
find_library(PCRE16_DEBUG_LIBRARY pcre16d)
find_library(PCRE32_DEBUG_LIBRARY pcre32d)
find_library(PCRECPP_DEBUG_LIBRARY pcrecppd)
find_library(PCREPOSIX_DEBUG_LIBRARY pcreposixd)

find_library(PCRE_RELEASE_LIBRARY pcre)
find_library(PCRE16_RELEASE_LIBRARY pcre16)
find_library(PCRE32_RELEASE_LIBRARY pcre32)
find_library(PCRECPP_RELEASE_LIBRARY pcrecpp)
find_library(PCREPOSIX_RELEASE_LIBRARY pcreposix)

set(PCRE_LIBRARY "$<$<CONFIG:Debug>:${PCRE_DEBUG_LIBRARY}>$<$<CONFIG:Release>:${PCRE_RELEASE_LIBRARY}>")
set(PCRE16_LIBRARY "$<$<CONFIG:Debug>:${PCRE16_DEBUG_LIBRARY}>$<$<CONFIG:Release>:${PCRE16_RELEASE_LIBRARY}>")
set(PCRE32_LIBRARY "$<$<CONFIG:Debug>:${PCRE32_DEBUG_LIBRARY}>$<$<CONFIG:Release>:${PCRE32_RELEASE_LIBRARY}>")
set(PCRECPP_LIBRARY "$<$<CONFIG:Debug>:${PCRECPP_DEBUG_LIBRARY}>$<$<CONFIG:Release>:${PCRECPP_RELEASE_LIBRARY}>")
set(PCREPOSIX_LIBRARY "$<$<CONFIG:Debug>:${PCREPOSIX_DEBUG_LIBRARY}>$<$<CONFIG:Release>:${PCREPOSIX_RELEASE_LIBRARY}>")

mark_as_advanced(
	PCRE_FOUND PCRE_INCLUDE_DIR
	PCRE_LIBRARY PCRE16_LIBRARY PCRE32_LIBRARY PCRECPP_LIBRARY PCREPOSIX_LIBRARY
	PCRE_DEBUG_LIBRARY PCRE16_DEBUG_LIBRARY PCRE32_DEBUG_LIBRARY PCRECPP_DEBUG_LIBRARY PCREPOSIX_DEBUG_LIBRARY
	PCRE_RELEASE_LIBRARY PCRE16_RELEASE_LIBRARY PCRE32_RELEASE_LIBRARY PCRECPP_RELEASE_LIBRARY PCREPOSIX_RELEASE_LIBRARY
)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(PCRE
	REQUIRED_VARS
		PCRE_INCLUDE_DIR PCRE_LIBRARY
		PCRE_DEBUG_LIBRARY PCRE16_DEBUG_LIBRARY PCRE32_DEBUG_LIBRARY PCRECPP_DEBUG_LIBRARY PCREPOSIX_DEBUG_LIBRARY
		PCRE_RELEASE_LIBRARY PCRE16_RELEASE_LIBRARY PCRE32_RELEASE_LIBRARY PCRECPP_RELEASE_LIBRARY PCREPOSIX_RELEASE_LIBRARY
)

if(PCRE_FOUND AND NOT TARGET PCRE::PCRE)
    add_library(PCRE::PCRE INTERFACE IMPORTED)
	target_include_directories(PCRE::PCRE INTERFACE ${PCRE_INCLUDE_DIR})
	target_link_libraries(PCRE::PCRE INTERFACE ${PCRE_LIBRARY})
endif()

if(PCRE_FOUND AND NOT TARGET PCRE::PCRE16)
    add_library(PCRE::PCRE16 INTERFACE IMPORTED)
	target_include_directories(PCRE::PCRE16 INTERFACE ${PCRE_INCLUDE_DIR})
	target_link_libraries(PCRE::PCRE16 INTERFACE ${PCRE16_LIBRARY})
endif()

if(PCRE_FOUND AND NOT TARGET PCRE::PCRE32)
    add_library(PCRE::PCRE32 INTERFACE IMPORTED)
	target_include_directories(PCRE::PCRE32 INTERFACE ${PCRE_INCLUDE_DIR})
	target_link_libraries(PCRE::PCRE32 INTERFACE ${PCRE32_LIBRARY})
endif()

if(PCRE_FOUND AND NOT TARGET PCRE::PCRECPP)
    add_library(PCRE::PCRECPP INTERFACE IMPORTED)
	target_include_directories(PCRE::PCRECPP INTERFACE ${PCRE_INCLUDE_DIR})
	target_link_libraries(PCRE::PCRECPP INTERFACE ${PCRECPP_LIBRARY})
endif()

if(PCRE_FOUND AND NOT TARGET PCRE::PCREPOSIX)
    add_library(PCRE::PCREPOSIX INTERFACE IMPORTED)
	target_include_directories(PCRE::PCREPOSIX INTERFACE ${PCRE_INCLUDE_DIR})
	target_link_libraries(PCRE::PCREPOSIX INTERFACE ${PCREPOSIX_LIBRARY})
endif()
